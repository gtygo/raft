// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raft.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestVoteReq struct {
	// Term is the new voting term.
	Term uint64 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	// Candidate is the candidate id
	CandidateId uint64 `protobuf:"varint,2,opt,name=candidateId,proto3" json:"candidateId,omitempty"`
	// LastLogIndex is the last log index.
	LastLogIndex uint64 `protobuf:"varint,3,opt,name=lastLogIndex,proto3" json:"lastLogIndex,omitempty"`
	// LastLogTerm is the last log term.
	LastLogTerm          uint64   `protobuf:"varint,4,opt,name=lastLogTerm,proto3" json:"lastLogTerm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteReq) Reset()         { *m = RequestVoteReq{} }
func (m *RequestVoteReq) String() string { return proto.CompactTextString(m) }
func (*RequestVoteReq) ProtoMessage()    {}
func (*RequestVoteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{0}
}

func (m *RequestVoteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteReq.Unmarshal(m, b)
}
func (m *RequestVoteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteReq.Marshal(b, m, deterministic)
}
func (m *RequestVoteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteReq.Merge(m, src)
}
func (m *RequestVoteReq) XXX_Size() int {
	return xxx_messageInfo_RequestVoteReq.Size(m)
}
func (m *RequestVoteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteReq.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteReq proto.InternalMessageInfo

func (m *RequestVoteReq) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteReq) GetCandidateId() uint64 {
	if m != nil {
		return m.CandidateId
	}
	return 0
}

func (m *RequestVoteReq) GetLastLogIndex() uint64 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *RequestVoteReq) GetLastLogTerm() uint64 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

type RequestVoteResp struct {
	// Term is the newer term if the lader is out of date.
	Term uint64 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	// Granted if the vote was granted.
	VoteGranted          bool     `protobuf:"varint,2,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteResp) Reset()         { *m = RequestVoteResp{} }
func (m *RequestVoteResp) String() string { return proto.CompactTextString(m) }
func (*RequestVoteResp) ProtoMessage()    {}
func (*RequestVoteResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{1}
}

func (m *RequestVoteResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteResp.Unmarshal(m, b)
}
func (m *RequestVoteResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteResp.Marshal(b, m, deterministic)
}
func (m *RequestVoteResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteResp.Merge(m, src)
}
func (m *RequestVoteResp) XXX_Size() int {
	return xxx_messageInfo_RequestVoteResp.Size(m)
}
func (m *RequestVoteResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteResp.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteResp proto.InternalMessageInfo

func (m *RequestVoteResp) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteResp) GetVoteGranted() bool {
	if m != nil {
		return m.VoteGranted
	}
	return false
}

type AppendEntriesReq struct {
	//leaders term
	Term                 uint64         `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId             uint64         `protobuf:"varint,2,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	PrevLogIndex         uint64         `protobuf:"varint,3,opt,name=prevLogIndex,proto3" json:"prevLogIndex,omitempty"`
	PrevLogTerm          uint64         `protobuf:"varint,4,opt,name=prevLogTerm,proto3" json:"prevLogTerm,omitempty"`
	Entries              []*Instruction `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommit         uint64         `protobuf:"varint,6,opt,name=leaderCommit,proto3" json:"leaderCommit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AppendEntriesReq) Reset()         { *m = AppendEntriesReq{} }
func (m *AppendEntriesReq) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesReq) ProtoMessage()    {}
func (*AppendEntriesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{2}
}

func (m *AppendEntriesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesReq.Unmarshal(m, b)
}
func (m *AppendEntriesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesReq.Marshal(b, m, deterministic)
}
func (m *AppendEntriesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesReq.Merge(m, src)
}
func (m *AppendEntriesReq) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesReq.Size(m)
}
func (m *AppendEntriesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesReq proto.InternalMessageInfo

func (m *AppendEntriesReq) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesReq) GetLeaderId() uint64 {
	if m != nil {
		return m.LeaderId
	}
	return 0
}

func (m *AppendEntriesReq) GetPrevLogIndex() uint64 {
	if m != nil {
		return m.PrevLogIndex
	}
	return 0
}

func (m *AppendEntriesReq) GetPrevLogTerm() uint64 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *AppendEntriesReq) GetEntries() []*Instruction {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *AppendEntriesReq) GetLeaderCommit() uint64 {
	if m != nil {
		return m.LeaderCommit
	}
	return 0
}

// log entries info
type Instruction struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Instruction) Reset()         { *m = Instruction{} }
func (m *Instruction) String() string { return proto.CompactTextString(m) }
func (*Instruction) ProtoMessage()    {}
func (*Instruction) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{3}
}

func (m *Instruction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instruction.Unmarshal(m, b)
}
func (m *Instruction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instruction.Marshal(b, m, deterministic)
}
func (m *Instruction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instruction.Merge(m, src)
}
func (m *Instruction) XXX_Size() int {
	return xxx_messageInfo_Instruction.Size(m)
}
func (m *Instruction) XXX_DiscardUnknown() {
	xxx_messageInfo_Instruction.DiscardUnknown(m)
}

var xxx_messageInfo_Instruction proto.InternalMessageInfo

func (m *Instruction) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Instruction) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Instruction) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type AppendEntriesResp struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntriesResp) Reset()         { *m = AppendEntriesResp{} }
func (m *AppendEntriesResp) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesResp) ProtoMessage()    {}
func (*AppendEntriesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{4}
}

func (m *AppendEntriesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesResp.Unmarshal(m, b)
}
func (m *AppendEntriesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesResp.Marshal(b, m, deterministic)
}
func (m *AppendEntriesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesResp.Merge(m, src)
}
func (m *AppendEntriesResp) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesResp.Size(m)
}
func (m *AppendEntriesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesResp.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesResp proto.InternalMessageInfo

func (m *AppendEntriesResp) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ClientCommandReq struct {
	Ins                  *Instruction `protobuf:"bytes,1,opt,name=ins,proto3" json:"ins,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ClientCommandReq) Reset()         { *m = ClientCommandReq{} }
func (m *ClientCommandReq) String() string { return proto.CompactTextString(m) }
func (*ClientCommandReq) ProtoMessage()    {}
func (*ClientCommandReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{5}
}

func (m *ClientCommandReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientCommandReq.Unmarshal(m, b)
}
func (m *ClientCommandReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientCommandReq.Marshal(b, m, deterministic)
}
func (m *ClientCommandReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientCommandReq.Merge(m, src)
}
func (m *ClientCommandReq) XXX_Size() int {
	return xxx_messageInfo_ClientCommandReq.Size(m)
}
func (m *ClientCommandReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientCommandReq.DiscardUnknown(m)
}

var xxx_messageInfo_ClientCommandReq proto.InternalMessageInfo

func (m *ClientCommandReq) GetIns() *Instruction {
	if m != nil {
		return m.Ins
	}
	return nil
}

type ClientCommandResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientCommandResp) Reset()         { *m = ClientCommandResp{} }
func (m *ClientCommandResp) String() string { return proto.CompactTextString(m) }
func (*ClientCommandResp) ProtoMessage()    {}
func (*ClientCommandResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{6}
}

func (m *ClientCommandResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientCommandResp.Unmarshal(m, b)
}
func (m *ClientCommandResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientCommandResp.Marshal(b, m, deterministic)
}
func (m *ClientCommandResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientCommandResp.Merge(m, src)
}
func (m *ClientCommandResp) XXX_Size() int {
	return xxx_messageInfo_ClientCommandResp.Size(m)
}
func (m *ClientCommandResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientCommandResp.DiscardUnknown(m)
}

var xxx_messageInfo_ClientCommandResp proto.InternalMessageInfo

func (m *ClientCommandResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*RequestVoteReq)(nil), "pb.RequestVoteReq")
	proto.RegisterType((*RequestVoteResp)(nil), "pb.RequestVoteResp")
	proto.RegisterType((*AppendEntriesReq)(nil), "pb.AppendEntriesReq")
	proto.RegisterType((*Instruction)(nil), "pb.Instruction")
	proto.RegisterType((*AppendEntriesResp)(nil), "pb.AppendEntriesResp")
	proto.RegisterType((*ClientCommandReq)(nil), "pb.ClientCommandReq")
	proto.RegisterType((*ClientCommandResp)(nil), "pb.ClientCommandResp")
}

func init() { proto.RegisterFile("raft.proto", fileDescriptor_b042552c306ae59b) }

var fileDescriptor_b042552c306ae59b = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x37, 0x9b, 0xee, 0x9f, 0x4e, 0x80, 0xed, 0x7a, 0x17, 0x29, 0xea, 0xa9, 0xf8, 0xb4,
	0x1c, 0xe8, 0x61, 0x11, 0x12, 0x27, 0xa4, 0xd5, 0x82, 0x96, 0x48, 0x9c, 0x0c, 0xe2, 0xee, 0xc6,
	0x53, 0x14, 0x91, 0x3a, 0xae, 0xed, 0x44, 0xf4, 0x1d, 0x78, 0x35, 0xce, 0xbc, 0xce, 0xca, 0x4e,
	0x5a, 0x39, 0x69, 0x7b, 0xf3, 0x7c, 0x8e, 0x67, 0xbe, 0xdf, 0xa7, 0x09, 0x80, 0xe6, 0x4b, 0x3b,
	0x57, 0xba, 0xb2, 0x15, 0x39, 0x55, 0x0b, 0xfa, 0x37, 0x82, 0x57, 0x0c, 0xd7, 0x35, 0x1a, 0xfb,
	0xb3, 0xb2, 0xc8, 0x70, 0x4d, 0x08, 0x8c, 0x2c, 0xea, 0x55, 0x1a, 0xcd, 0xa2, 0xbb, 0x11, 0xf3,
	0x67, 0x32, 0x83, 0x24, 0xe7, 0x52, 0x14, 0x82, 0x5b, 0xcc, 0x44, 0x7a, 0xea, 0xaf, 0x42, 0x89,
	0x50, 0x78, 0x51, 0x72, 0x63, 0xbf, 0x55, 0xbf, 0x32, 0x29, 0xf0, 0x4f, 0x1a, 0xfb, 0x4f, 0x7a,
	0x9a, 0xeb, 0xd2, 0xd5, 0x3f, 0xdc, 0x80, 0x51, 0xdb, 0x25, 0x90, 0xe8, 0x13, 0x5c, 0xf5, 0xdc,
	0x18, 0x75, 0xcc, 0x4e, 0x53, 0x59, 0x7c, 0xd2, 0x5c, 0x5a, 0x6c, 0xed, 0x5c, 0xb2, 0x50, 0xa2,
	0xff, 0x23, 0x98, 0x3c, 0x28, 0x85, 0x52, 0x7c, 0x91, 0x56, 0x17, 0x68, 0x8e, 0x91, 0x4d, 0xe1,
	0xb2, 0x44, 0x2e, 0x50, 0xef, 0xb0, 0x76, 0xb5, 0x63, 0x52, 0x1a, 0x9b, 0x21, 0x53, 0xa8, 0x39,
	0x2b, 0x5d, 0x1d, 0x32, 0x05, 0x12, 0x79, 0x0b, 0x17, 0xd8, 0x7a, 0x48, 0xcf, 0x66, 0xf1, 0x5d,
	0x72, 0x7f, 0x35, 0x57, 0x8b, 0x79, 0x26, 0x8d, 0xd5, 0x75, 0x6e, 0x8b, 0x4a, 0xb2, 0xed, 0xbd,
	0x0f, 0xd1, 0x0f, 0x7f, 0xac, 0x56, 0xab, 0xc2, 0xa6, 0xe7, 0x5d, 0x88, 0x81, 0x46, 0x33, 0x48,
	0x82, 0xb7, 0x9e, 0x69, 0xa3, 0xd0, 0x33, 0x8d, 0x99, 0x3f, 0x93, 0x09, 0xc4, 0xbf, 0x71, 0xe3,
	0x71, 0xc6, 0xcc, 0x1d, 0xc9, 0x2d, 0x9c, 0x35, 0xbc, 0xac, 0xd1, 0x23, 0x8c, 0x59, 0x5b, 0xd0,
	0x07, 0xb8, 0x1e, 0x64, 0x74, 0x24, 0xef, 0x14, 0x2e, 0x4c, 0x9d, 0xe7, 0x68, 0x4c, 0x97, 0xf5,
	0xb6, 0xa4, 0x1f, 0x60, 0xf2, 0x58, 0x16, 0x28, 0xad, 0x73, 0xc7, 0xa5, 0x70, 0x31, 0xbf, 0x81,
	0xb8, 0x90, 0xc6, 0x37, 0x38, 0x00, 0xeb, 0xee, 0xe8, 0x3b, 0xb8, 0x1e, 0x3c, 0x33, 0x2a, 0x9c,
	0x12, 0xf5, 0xa6, 0xdc, 0xff, 0x8b, 0x20, 0x61, 0x7c, 0x69, 0xbf, 0xa3, 0x6e, 0x8a, 0x1c, 0xc9,
	0x47, 0x48, 0x82, 0x35, 0x21, 0xc4, 0xcd, 0xe8, 0x6f, 0xf1, 0xf4, 0x66, 0x4f, 0x33, 0x8a, 0x9e,
	0x90, 0x4f, 0xf0, 0xb2, 0x87, 0x4c, 0x6e, 0xdd, 0x77, 0xc3, 0x4d, 0x99, 0xbe, 0x3e, 0xa0, 0xfa,
	0xf7, 0x9f, 0xe1, 0xe6, 0x2b, 0x97, 0xa2, 0xc4, 0x9e, 0xfd, 0xb6, 0xcb, 0x30, 0x88, 0xb6, 0xcb,
	0x1e, 0x27, 0x3d, 0x59, 0x9c, 0xfb, 0x1f, 0xf0, 0xfd, 0x73, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4d,
	0xd6, 0x77, 0x78, 0x8e, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RaftServiceClient is the client API for RaftService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftServiceClient interface {
	RequestVote(ctx context.Context, in *RequestVoteReq, opts ...grpc.CallOption) (*RequestVoteResp, error)
	AppendEntries(ctx context.Context, in *AppendEntriesReq, opts ...grpc.CallOption) (*AppendEntriesResp, error)
	HandleClientCommand(ctx context.Context, in *ClientCommandReq, opts ...grpc.CallOption) (*ClientCommandResp, error)
}

type raftServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRaftServiceClient(cc grpc.ClientConnInterface) RaftServiceClient {
	return &raftServiceClient{cc}
}

func (c *raftServiceClient) RequestVote(ctx context.Context, in *RequestVoteReq, opts ...grpc.CallOption) (*RequestVoteResp, error) {
	out := new(RequestVoteResp)
	err := c.cc.Invoke(ctx, "/pb.RaftService/RequestVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftServiceClient) AppendEntries(ctx context.Context, in *AppendEntriesReq, opts ...grpc.CallOption) (*AppendEntriesResp, error) {
	out := new(AppendEntriesResp)
	err := c.cc.Invoke(ctx, "/pb.RaftService/AppendEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftServiceClient) HandleClientCommand(ctx context.Context, in *ClientCommandReq, opts ...grpc.CallOption) (*ClientCommandResp, error) {
	out := new(ClientCommandResp)
	err := c.cc.Invoke(ctx, "/pb.RaftService/HandleClientCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaftServiceServer is the server API for RaftService service.
type RaftServiceServer interface {
	RequestVote(context.Context, *RequestVoteReq) (*RequestVoteResp, error)
	AppendEntries(context.Context, *AppendEntriesReq) (*AppendEntriesResp, error)
	HandleClientCommand(context.Context, *ClientCommandReq) (*ClientCommandResp, error)
}

// UnimplementedRaftServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRaftServiceServer struct {
}

func (*UnimplementedRaftServiceServer) RequestVote(ctx context.Context, req *RequestVoteReq) (*RequestVoteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestVote not implemented")
}
func (*UnimplementedRaftServiceServer) AppendEntries(ctx context.Context, req *AppendEntriesReq) (*AppendEntriesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppendEntries not implemented")
}
func (*UnimplementedRaftServiceServer) HandleClientCommand(ctx context.Context, req *ClientCommandReq) (*ClientCommandResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleClientCommand not implemented")
}

func RegisterRaftServiceServer(s *grpc.Server, srv RaftServiceServer) {
	s.RegisterService(&_RaftService_serviceDesc, srv)
}

func _RaftService_RequestVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestVoteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServiceServer).RequestVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RaftService/RequestVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServiceServer).RequestVote(ctx, req.(*RequestVoteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftService_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntriesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServiceServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RaftService/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServiceServer).AppendEntries(ctx, req.(*AppendEntriesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftService_HandleClientCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientCommandReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServiceServer).HandleClientCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RaftService/HandleClientCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServiceServer).HandleClientCommand(ctx, req.(*ClientCommandReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RaftService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.RaftService",
	HandlerType: (*RaftServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestVote",
			Handler:    _RaftService_RequestVote_Handler,
		},
		{
			MethodName: "AppendEntries",
			Handler:    _RaftService_AppendEntries_Handler,
		},
		{
			MethodName: "HandleClientCommand",
			Handler:    _RaftService_HandleClientCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "raft.proto",
}
