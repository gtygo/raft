syntax = "proto3";
package pb;

message RequestVoteReq {
  // Term is the new voting term.
  uint64 term = 1;
  // Candidate is the candidate id
  uint64 candidateId = 2;
  // LastLogIndex is the last log index.
  uint64 lastLogIndex = 3;
  // LastLogTerm is the last log term.
  uint64 lastLogTerm = 4;
}

message RequestVoteResp {
  // Term is the newer term if the lader is out of date.
  uint64 term = 1;
  // Granted if the vote was granted.
  bool voteGranted = 2;
}

message AppendEntriesReq{
    //leaders term
    uint64 term =1;

    uint64 leaderId =2;

    uint64 prevLogIndex =3;

    uint64 prevLogTerm =4;

    repeated Instruction entries =5;

    uint64 leaderCommit =6;
}

// log entries info
message Instruction {
    string type =1;
    string key =2;
    string value =3;
}

message AppendEntriesResp{
    uint64 term =1;
    bool success =2;
}

service RaftService {
    rpc RequestVote(RequestVoteReq) returns (RequestVoteResp){}
    rpc AppendEntries(AppendEntriesReq) returns (AppendEntriesResp){}
}



